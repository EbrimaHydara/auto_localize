<% const pagetitle = "楽天モバイルショップでできること" -%>
<% const directories = [{path:"shop/", label:"ショップ"}] -%>
<% const namespace = "shop-support" -%>
<%-
 include('/_header', {
    pagetitle: pagetitle,
    directories: directories,
    description: '回線契約や名義変更などのお手続き、故障受付、製品やアプリの操作を説明、LINEや電話帳の新しいスマホへの移行サポートなど、楽天モバイルショップ（店舗）でできるサポートサービスをご案内します。',
    noindex: false,
    pathname: filepath,
    browseragent: false
  });
%>
<%- include('/include/_common-css-v2') %>
<link rel="stylesheet" href="<%= sitepath %>assets/css/shop/shop-support/shop-support.css?20240424">
<%- include('/include/_append-head') %>
</head>
<body>
<%- include('/include/_prepend-body') %>

<div class="l-System">

<%- include('/include/_header') %>

<div class="c-Breadcrumbs_Head">
  <ul>
    <li><a href="<%= rootpath %>"><%= sitetitle %></a><span class="c-Icon_Chevron-right"></span></li>
    <%_ if (typeof directories !== 'undefined') { _%>
    <%_ let dirs = []; _%>
    <%_ directories.forEach(function (dir) { _%>
      <%_ if (dir.path !== "") { _%>
        <li><a href="<%= sitepath %><%= dir.path %>"><%= dir.label %></a><span class="c-Icon_Chevron-right"></span></li>
      <%_ } else { _%>
        <li><%= dir.label %><span class="c-Icon_Chevron-right"></span></li>
      <%_ } _%>
    <%_ }) _%>
    <%_ } _%>
    <li aria-current="true"><%= pagetitle %></li>
  </ul>
</div>
<div id="attention"></div>

<div class="c-Hero <%= namespace %>-Hero">
  <div class="c-Hero_Content <%= namespace %>-Hero_Content">
    <div class="<%= namespace %>-Hero_Note-wrapper">
      <p class="c-Txt_Cap u-Adjust_Align-right <%= namespace %>-Hero_Note">※表記の金額はすべて税込です。</p>
    </div>
    <span class="<%= namespace %>-Hero_Content-main">
      <p class="c-Txt_Normal-l <%= namespace %>-Hero_Txt">お申し込み・ご購入後も安心</p>
      <h1 class="<%= namespace %>-Hero_Title"><span><%= pagetitle %></span></h1>
    </span>
  </div>
</div>

<div class="l-System_Container">
  <div class="l-System">
    <p class="u-Adjust_Mt-32 u-Adjust_Mb-24">楽天モバイルショップ（店舗）では、お申し込み手続きだけでなく、各種アフターサポートにも対応しております。</p>
  </div>
</div>

<div class="c-Theme-Light">
  <div class="<%= namespace %>-Layout_Nav l-System_Container">
    <a href="#procedure" class="<%= namespace %>-Layout_Nav-link">
      <span class="c-Icon_Arrow-down-l <%= namespace %>-Layout_Nav-arrow"></span>
      <span>回線契約や名義変更など各種手続き</span>
    </a>
    <a href="#malfunction" class="<%= namespace %>-Layout_Nav-link">
      <span class="c-Icon_Arrow-down-l <%= namespace %>-Layout_Nav-arrow"></span>
      <span>故障受付<span class="<%= namespace %>-Layout_Nav-emp">（Rakutenオリジナル製品のみ）</span></span>
    </a>
    <a href="#support" class="<%= namespace %>-Layout_Nav-link">
      <span class="c-Icon_Arrow-down-l <%= namespace %>-Layout_Nav-arrow"></span>
      <span>あんしん操作サポート</span>
    </a>
  </div>
  <div class="<%= namespace %>-Layout_Nav l-System_Container">
    <a href="#data" class="<%= namespace %>-Layout_Nav-link">
      <span class="c-Icon_Arrow-down-l <%= namespace %>-Layout_Nav-arrow"></span>
      <span>データ移行サポート</span>
    </a>
    <a href="#film" class="<%= namespace %>-Layout_Nav-link">
      <span class="c-Icon_Arrow-down-l <%= namespace %>-Layout_Nav-arrow"></span>
      <span>保護フィルム貼り付け</span>
    </a>
    <a href="#coating" class="<%= namespace %>-Layout_Nav-link">
      <span class="c-Icon_Arrow-down-l <%= namespace %>-Layout_Nav-arrow"></span>
      <span>ガラスコーティング</span>
    </a>
  </div>
</div>

<div class="l-System_Container">
  <h2 id="procedure" class="c-Txt_Normal-l u-Adjust_Mt-48">各種手続き</h2>
  <ul class="<%= namespace %>-Layout_Procedures u-Adjust_Mt-16">
    <li class="c-Theme-Borderbox">
      <h3 class="c-Txt_Normal-m u-Adjust_Mb-8">新規/MNP乗り換えお申し込み</h3>
      <ul class="c-List_Text-disc <%= namespace %>-Utility_List-item">
        <li>他社からのMNPでの乗り換え申し込み</li>
        <li>新規でのお申し込み</li>
        <li>楽天モバイル（スーパーホーダイ・組み合わせプラン）からのプラン変更</li>
      </ul>
    </li>
    <li class="c-Theme-Borderbox">
      <h3 class="c-Txt_Normal-m u-Adjust_Mb-8">ご契約内容の追加・変更・解約</h3>
      <ul class="c-List_Text-disc <%= namespace %>-Utility_List-item">
        <li>オプションお申し込み/ご解約</li>
        <li>ご登録住所変更</li>
        <li>お支払い方法の変更</li>
        <li>回線の追加契約、ご解約</li>
        <li>楽天ID作成</li>

        <p class="c-Txt_Cap u-Adjust_Mt-8">※my 楽天モバイルにログインできることを確認の上、ご来店ください</p>
        <p class="c-Txt_Cap u-Adjust_Mt-8">※製品の操作はお客様ご自身で行っていただきます</p>
        <p class="c-Txt_Cap u-Adjust_Mt-8">※上記以外はサポート対象外です</p>
      </ul>
    </li>
    <li class="c-Theme-Borderbox">
      <h3 class="c-Txt_Normal-m u-Adjust_Mb-8">名義変更手続き</h3>
      <ul class="c-List_Text-disc <%= namespace %>-Utility_List-item">
        <li>名義変更のWeb手続きをサポート</li>
        <li>名義変更申込用紙の記入サポート
          <p class="c-Txt_Cap">
            ※申込用紙での名義変更は以下の場合となります<br>
            - ご契約者様が逝去された場合の承継<br>
            - ご契約者様が改姓・改名した場合の名義変更
          </p>
        </li>
        <li>名義変更手続き完了後のmy 楽天モバイルログインをサポート</li>
      </ul>
    </li>
  </ul>
  <div class="u-Adjust_Align-center u-Adjust_Mt-24">
    <a href="<%= sitepath %>shop/" class="c-Btn_Secondly"><span>ショップの来店予約をする</span></a>
  </div>
  <h2 id="malfunction" class="c-Txt_Normal-l u-Adjust_Mt-56">Rakutenオリジナル製品の故障受付</h2>
  <div class="c-Theme-Borderbox u-Adjust_Mt-24">
    <p class="c-Txt_Cap"><span class="c-Txt_Emp-02">※故障受付はRakutenオリジナル製品のみ。</span></p>
    <p class="c-Txt_Cap u-Adjust_Mt-8">※Rakutenオリジナル製品以外の故障はよくあるご質問の「<a class="c-Link_Txt" style="text-decoration: underline;" href="<%= sitepath %>guide/inquiry/">各製品メーカーへのお問い合わせ</a>」をご確認ください</p>
    <div class="l-Media_Grid u-Adjust_Mt-24">
      <div class="l-Media_Image">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-01.png" alt="">
      </div>
      <div>
        楽天モバイルショップにご来店いただき、製品の状態を確認後、故障診断を行うための専用電話窓口へお取り次ぎいたします。スタッフ（R CREW）が、電話口の専用アドバイザーとお客様とのやりとりをサポートいたします。
        <p class="c-Txt_Cap u-Adjust_Mt-8">※必要に応じて代替機を貸し出しいたします</p>
        <p class="c-Txt_Cap u-Adjust_Mt-8">※交換・修理には別途費用が発生する場合あり、状況によっては受付しかねる場合あり</p>
        <p class="c-Txt_Cap <%= namespace %>-Utility_Note-emp u-Adjust_Mt-8">※家電量販店、郵便局内の店舗では対応を行っておりません</p>
        <a href="<%= sitepath %>shop/" class="c-Btn_Secondly u-Adjust_Mt-24"><span>ショップの来店予約をする</span></a>
      </div>
    </div>
  </div>
  <h2 id="support" class="c-Txt_Normal-l u-Adjust_Mt-56">製品やアプリの操作を説明「あんしん操作サポート」</h2>
  <div class="c-Theme-Borderbox u-Adjust_Mt-24">
    <div class="l-Media_Grid u-Adjust_Mt-24">
      <div class="l-Media_Image">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-02.png" alt="">
      </div>
      <div class="<%= namespace %>-Utility_Txt">
        あんしん操作サポートは、楽天モバイル取り扱い製品やアプリの操作方法をサポートします（アプリはSNSや楽天グループサービスの一部が対象）。店舗でお客様と直接お話ししながら、お困りごとにお答えする安心のサービスです。
        <div class="u-Adjust_Align-right u-Adjust_Mt-16">
          <p><span class="c-Txt_Alphanumeric-m">550</span>円／月</p>
        </div>
        <a href="<%= sitepath %>service/shop-support-for-device-operation/" class="c-Btn_Regular u-Adjust_Mt-24"><span>あんしん操作サポートの詳細を見る</span></a>
      </div>
      <p class="u-Adjust_Mt-32">サポート対応ショップは、ショップ詳細ページのアイコンからご確認いただけます。</p>
      <p class="c-Txt_Cap c-Txt_Emp-02 u-Adjust_Mt-8" style="width:100%;">※家電量販店では「あんしん操作サポート」の対応を行っておりません</p>
      <div class="<%= namespace %>-Utility_Cap u-Adjust_Mt-16">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-03.png" alt="">
      </div>
    </div>
  </div>
  <h2 id="data" class="c-Txt_Normal-l u-Adjust_Mt-56">ご利用ごとにお支払い「データ移行サポート」</h2>
  <div class="c-Theme-Borderbox u-Adjust_Mt-24">
    <div class="l-Media_Grid u-Adjust_Mt-24">
      <div class="l-Media_Image">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-04.png" alt="">
      </div>
      <div class="<%= namespace %>-Utility_Txt">
        データ移行サポートは、スタッフが各種移行操作をサポートします。ご利用ごとのお支払いなので、お客様が必要なときにだけ気軽にご利用いただけます。
        <div class="u-Adjust_Align-right u-Adjust_Mt-16">
          <p><span class="c-Txt_Alphanumeric-m">1,100</span>円〜<span class="c-Txt_Alphanumeric-m">2,200</span>円／回</p>
          <p class="c-Txt_Cap u-Adjust_Mt-8">※ご利用サービスにより異なります</p>
        </div>
        <a href="<%= sitepath %>service/shop-support-for-oneshot-operation/" class="c-Btn_Regular u-Adjust_Mt-24"><span>データ移行サポートの詳細を見る</span></a>
      </div>
      <p class="u-Adjust_Mt-32">サポート対応ショップは、ショップ詳細ページのアイコンからご確認いただけます。</p>
      <p class="c-Txt_Cap c-Txt_Emp-02 u-Adjust_Mt-8" style="width:100%;">※家電量販店、郵便局内の店舗では「データ移行サポート」の対応を行っておりません</p>
      <div class="<%= namespace %>-Utility_Cap u-Adjust_Mt-16">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-05.png" alt="">
      </div>
    </div>
  </div>
  <h2 id="film" class="c-Txt_Normal-l u-Adjust_Mt-56">迅速で綺麗な仕上り「保護フィルム貼り付け」</h2>
  <div class="c-Theme-Borderbox u-Adjust_Mt-24">
    <div class="l-Media_Grid u-Adjust_Mt-24">
      <div class="l-Media_Image">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-08.png" alt="">
      </div>
      <div class="<%= namespace %>-Utility_Txt">
        ショップスタッフがお客様の端末に保護フィルムの貼り付けを実施いたします。精密・綺麗に仕上がるため、貼り付けが苦手な方におすすめです。
        <p class="c-Txt_Cap u-Adjust_Mt-8">※楽天モバイルの店頭で保護フィルムを購入されたお客様対象となります。（お店を出られた後は対象外となります）</p>
        <div class="u-Adjust_Align-right u-Adjust_Mt-16">
          <p><span class="c-Txt_Alphanumeric-m">1,100</span>円／回</p>
        </div>
        <a href="<%= sitepath %>service/shop-support-for-protective-film/" class="c-Btn_Regular u-Adjust_Mt-24"><span>保護フィルム貼り付けの詳細を見る</span></a>
      </div>
    </div>
  </div>
  <h2 id="coating" class="c-Txt_Normal-l u-Adjust_Mt-56">傷・汚れに強く、抗菌効果「ガラスコーティング」</h2>
  <div class="c-Theme-Borderbox u-Adjust_Mt-24">
    <div class="l-Media_Grid u-Adjust_Mt-24">
      <div class="l-Media_Image">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-10.png" alt="">
      </div>
      <div class="<%= namespace %>-Utility_Txt">
        ショップスタッフがお客様の端末にガラスコーティングを施工いたします。コーティングをすることで強力に画面を保護するだけでなく、抗菌・抗ウイルス効果も発揮します。
        <div class="u-Adjust_Align-right u-Adjust_Mt-16">
          <p><span class="c-Txt_Alphanumeric-m">4,400</span>円／回</p>
        </div>
        <a href="<%= sitepath %>service/shop-support-for-glass-coating/" class="c-Btn_Regular u-Adjust_Mt-24"><span>ガラスコーティングの詳細を見る</span></a>
      </div>
      <p class="u-Adjust_Mt-32">サポート対応ショップは、ショップ詳細ページのアイコンからご確認いただけます。</p>
      <p class="c-Txt_Cap c-Txt_Emp-02 u-Adjust_Mt-8" style="width:100%;">※郵便局店および家電量販店では「ガラスコーティング」の対応を行っておりません</p>
      <div class="<%= namespace %>-Utility_Cap u-Adjust_Mt-16">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-11.png" alt="">
      </div>
    </div>
  </div>
</div>

<div class="c-Theme-Light u-Adjust_Mt-32">
  <div class="l-System_Container <%= namespace %>-Utility_Container">
    <h2 class="c-Txt_Normal-ll u-Adjust_Mt-8">ご来店の前に</h2>
    <div class="l-Media_Grid c-Theme-White <%= namespace %>-Utility_Theme u-Adjust_Mt-24">
      <div class="l-Media_Image">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-06.png" alt="">
      </div>
      <div class="<%= namespace %>-Utility_Theme-txt">
          <h3 class="c-Txt_Normal-l">当日ご持参いただくものを、必ずご確認ください</h3>
          <a href="<%= sitepath %>shop/guide/" class="c-Btn_Regular u-Adjust_Mt-24">ご来店時に必要なものを確認する</a>
      </div>
    </div>
    <div class="l-Media_Grid c-Theme-White u-Adjust_Mt-16 <%= namespace %>-Utility_Theme">
      <div class="l-Media_Image">
        <img src="<%= sitepath %>assets/img/shop/shop-support/img-07.png" alt="">
      </div>
      <div class="<%= namespace %>-Utility_Theme-txt">
          <h3 class="c-Txt_Normal-l">来店予約がおすすめです</h3>
          <a href="<%= sitepath %>shop/" class="c-Btn_Secondly u-Adjust_Mt-24">お近くの店舗を探す</a>
      </div>
    </div>
  </div>
</div>

<footer class="g-Footer">

  <div class="g-Footer_Aside">

    <%- include('/include/footer/related/_related-shop-v2.ejs') %>

    <%#- include('/include/footer/bnr/bnr-shop.ejs') %>

    <%#- include('/faq/include/related-shop.ejs') %>
  </div>
  <div class="l-System_Container">
    <div class="c-Breadcrumbs_Foot">
      <ul>
        <li><a href="<%= rootpath %>"><%= sitetitle %></a><span class="c-Icon_Chevron-right"></span></li>
        <li aria-current="true"><%= pagetitle %></li>
      </ul>
    </div>
  </div>

  <%- include('/include/_footer') %>

</footer>


</div>
<%- include('/include/_common-js') %>
<script src="<%= sitepath %>assets/js/shop.top.bundle.js?20240521"></script>
<script>
  const sitepath = '/';
  const mapContainer = document.getElementById('js-shop-Search_Map');
  const mapInput = document.getElementById('js-shop-Search_Map-input');
  const mapLocation = document.getElementById('js-shop-Search_Map-location');
  const mapFilter = document.getElementById('js-shop-Search_Map-filter');
  const mapMsg = document.getElementsByClassName('shop-Search_Map-msg')[0];
  const mapSelectedFilters = document.getElementById('js-shop-Search_Map-filters');
  const selectPref = document.getElementById('js-shop-Search_Select-pref');
  const selectCity = document.getElementById('js-shop-Search_Select-city');
  const searchByPrefCity = document.getElementById('js-shop-Search_Prefcity');
  const mapLoading = document.getElementsByClassName('js-shop-Search_Map-loading')[0];
  const mapSetting = {
      apiUrl: 'https://maps.googleapis.com/maps/api/js',
      channel: '000-000791',
      client: 'gme-rakuteninc2',
      libraries: ['places', 'geometry']
  };
  const mapDefaultCenter = {
      lat: Number('35.661853'),
      lng: Number('139.700184')
  };
  const mapDefaultZoom = 13;
  const mapOption = {
      center: mapDefaultCenter,
      mapTypeControl: false,
      fullscreenControl: false,
      streetViewControl: false,
      zoom: mapDefaultZoom
  };
  const clusterStyles = [
  {
      textColor: 'white',
      url: '/assets/img/common/mc/m0.png',
      height: 36,
      width: 36
  }
  ];
  const markerImgSmall = '/assets/img/common/icon-location-s.png';
  const markerImgLarge = '/assets/img/common/icon-location-l.png';

  let today = new Date();
  const filterPublication = function(value) {
      const publicationStartDatetime= value.announcement_info.publication_start_datetime.replace(/-/g, '/');
      const termStart = new Date(publicationStartDatetime);
      if (termStart <= today) {
          if (typeof value.announcement_info.publication_end_datetime !== 'undefined') {
              const publicationEndDatetime = value.announcement_info.publication_end_datetime.replace(/-/g, '/');
              const termEnd = new Date(publicationEndDatetime);
              return today <= termEnd ? true : false;
          } else {
              return true;
          }
      } else {
          return false;
      }
  };
  const checkAvailableService = function(value) {
      const allServices = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];
      const availableServices = [];
      value.forEach(elem => {
          const arr = elem.supported_features.services;
          availableServices.push.apply(availableServices, arr);
      });
      const availableServicesTrimmed = [...new Set(availableServices)];
      const availableServicesSorted = availableServicesTrimmed.sort((a, b) => a - b);
      const filteredServices = allServices
          .filter(elem => availableServicesSorted.indexOf(elem) > -1);
      return filteredServices;
  }

  function initMap() {

    if (mapContainer) {
        $.ajaxSetup({
            cache: false
        });

        // PROD
        $.getJSON('https://network.mobile.rakuten.co.jp/shopmaster-public/v1/shops')
            .done(function(rawData) {
                const data = rawData.filter(elem => filterPublication(elem));
                const availableServices = checkAvailableService(data);
                if (availableServices.length !== 0) {
                    filterServices(availableServices);
                } else {
                    hideFilterByService();
                }
                buildMap(data, mapDefaultCenter, false);
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        var pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                        buildMap(data, pos, true);
                    });
                }
                if (selectPref) {
                    let uniqueCities= setPrefectures(data);
                    selectPref.addEventListener('change', function() {
                        enableSearchByPrefCity();
                      if (selectCity) {
                          setCities(selectPref.value, uniqueCities);
                      }
                    });
                }
                if (selectCity) {
                    selectCity.addEventListener('change', function() {
                        enableSearchByPrefCity();
                    });
                }
                if (searchByPrefCity) {
                    searchByPrefCity.addEventListener('click', function(e) {
                        window.location.href = searchByPrefCity.getAttribute('data-href');
                    });
                }
            })
            .fail(function( jqxhr, textStatus, error ) {
                console.log('error.');
            });
    }
  }

  function buildMap (shopList, pos, isGeolocationEnabled) {
      mapOption.center = pos;
      let filteredList = [];

      let map = new google.maps.Map(mapContainer, mapOption);
      let service = new google.maps.places.PlacesService(map);
      let mc = new MarkerClusterer(map, [],
          {
              gridSize: 60,
              maxZoom: 20,
              styles: clusterStyles
          }
      );
      filteredList = setFilters(shopList);
      setShopmarker(google.maps, map, filteredList, mc);
      calcDistances(google.maps, map, filteredList);

      const checkSessionStRequest = sessionStorage.getItem('shopSessionStRequest')
      const checkSessionStAutoComp = sessionStorage.getItem('shopSessionStAutoComp')
      let inputFormValue = document.querySelector('#js-shop-Search_Map-input');

      if(checkSessionStRequest) {
        const shopSessionStRequest = sessionStorage.getItem('shopSessionStRequest');
        const shopSessionStResults = sessionStorage.getItem('shopSessionStResults');
        const shopSessionStStatus = sessionStorage.getItem('shopSessionStStatus');
        const shopSessionStResultsForArray = JSON.parse(shopSessionStResults);
        map.setCenter(shopSessionStResultsForArray[0].geometry.location);
        map.setZoom(mapDefaultZoom);
        inputFormValue.value = JSON.parse(shopSessionStRequest).query;
      }

      if(checkSessionStAutoComp) {
        const shopSessionStAutoCompForJson = JSON.parse(checkSessionStAutoComp);
        let sw = new google.maps.LatLng(shopSessionStAutoCompForJson.south, shopSessionStAutoCompForJson.west);
        let ne = new google.maps.LatLng(shopSessionStAutoCompForJson.north, shopSessionStAutoCompForJson.east);
        let sessionStAutoBounds = new google.maps.LatLngBounds(sw, ne);
        map.fitBounds(sessionStAutoBounds);
        filteredList = setFilters(shopList);
        setShopmarker(google.maps, map, filteredList, mc);
        calcDistances(google.maps, map, filteredList);
        let shopSessionStAutoCompValueInput = sessionStorage.getItem('shopSessionStAutoCompValue');
        inputFormValue.value = shopSessionStAutoCompValueInput;
        map.setZoom(mapDefaultZoom);
      }

      if (mapInput) {
          let autocomplete = new google.maps.places.Autocomplete(mapInput);
          autocomplete.bindTo('bounds', map);
          autocomplete.setFields(['address_components', 'geometry', 'icon', 'name']);
          autocomplete.addListener('place_changed', function() {
              let place = autocomplete.getPlace();
              if (!place.geometry) {
                  let request = {
                      query: mapInput.value,
                      fields: ['name', 'geometry'],
                  };
                  service.findPlaceFromQuery(request, function(results, status) {

                let forSessionStRequest = JSON.stringify({
                  "query": request.query,
                  "fields": [request.fields]
                })
                let forSessionStResults = JSON.stringify(results);
                let forSessionStStatus = JSON.stringify(status);
                sessionStorage.setItem('shopSessionStRequest', forSessionStRequest);
                sessionStorage.setItem('shopSessionStResults', forSessionStResults);
                sessionStorage.setItem('shopSessionStStatus', forSessionStStatus);
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    map.setZoom(mapDefaultZoom);
                    filteredList = setFilters(shopList);
                    setShopmarker(google.maps, map, filteredList, mc);
                    calcDistances(google.maps, map, filteredList);
                    //text検索
                    sessionStorage.setItem('sessionStInputFormValue', inputFormValue.value);
                    sessionStorage.removeItem('shopSessionStAutoComp');
                }
                  });
                  return;
              }
              if (place.geometry.viewport) {
                let shopSessionStAutoComp = JSON.stringify(place.geometry.viewport);
                sessionStorage.setItem('shopSessionStAutoComp', shopSessionStAutoComp);
                  map.fitBounds(place.geometry.viewport);
                  filteredList = setFilters(shopList);
                  setShopmarker(google.maps, map, filteredList, mc);
                  calcDistances(google.maps, map, filteredList);
                  //google検索
                  let shopSessionStAutoCompValue = document.querySelector('#js-shop-Search_Map-input');
                  sessionStorage.setItem('shopSessionStAutoCompValue', shopSessionStAutoCompValue.value);
                  sessionStorage.removeItem('shopSessionStStatus');
                  sessionStorage.removeItem('shopSessionStRequest');
                  sessionStorage.removeItem('shopSessionStResults');
              } else {
                  map.setCenter(place.geometry.location);
                  map.setZoom(mapDefaultZoom);
                  filteredList = setFilters(shopList);
                  setShopmarker(google.maps, map, filteredList, mc);
                  calcDistances(google.maps, map, filteredList);
              }
          });
      }

      if (mapLocation && isGeolocationEnabled) {
          mapLocation.addEventListener('click', function() {
              map.setCenter(pos);
              map.setZoom(mapDefaultZoom);
              calcDistances(google.maps, map, filteredList);
          });
      } else {
          mapLocation.style.display = 'none';
      }

      if (mapFilter) {
          mapFilter.addEventListener('click', function() {
              filteredList = setFilters(shopList);
              setShopmarker(google.maps, map, filteredList, mc);
              calcDistances(google.maps, map, filteredList);

              const rect = mapInput.getBoundingClientRect();
              const position = rect.top + window.pageYOffset;
              document.documentElement.scrollTop = position;
          });
      }
      mapLoading.setAttribute('aria-hidden', true);
  }

  function setShopmarker(googleMaps, map, shopList, mc) {
      let markers =[];
      let infoWindow = new googleMaps.InfoWindow({
          maxWidth: 320
      });
      const regIcon = {
          url: markerImgSmall,
          scaledSize: new googleMaps.Size(32, 32)
      };
      const largeIcon = {
          url: markerImgLarge,
          scaledSize: new googleMaps.Size(48, 48)
      };

      if (mapMsg) {
          if (shopList.length === 0) {
              mapMsg.setAttribute('aria-hidden', false);
          } else {
              mapMsg.setAttribute('aria-hidden', true);
          }
      }
      const formatDate = function(value) {
          const date = new Date(value);
          return `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日`;
      };
      const openSign = function(value) {
          const startDate = new Date(value);
          const term = new Date(value);
          term.setDate(term.getDate() + 14);
          if (startDate > today) {
              return `${formatDate(value)}オープン予定`;
          } else if (today <= term) {
              return `${formatDate(value)}オープン`;
          } else {
              return false;
          }
      };
      shopList.forEach(function(shop, index) {
          let position = new googleMaps.LatLng(shop.location.latitude, shop.location.longitude);
          let infoWindowContent = '';
          if (openSign(shop.start_date)) {
              infoWindowContent += `<p class="shop-Search_Infowindow-opensign"><span class="c-Txt_Emp-02">${openSign(shop.start_date)}</span></p>`;
          }
          infoWindowContent += '<p class="shop-Search_Infowindow-title"><a href="/shop-detail/';
          infoWindowContent += shop.code + '">';
          infoWindowContent += shop.name + '</a></p><p class="shop-Search_Infowindow-text">';
          infoWindowContent += shop.location.prefecture + shop.location.city + shop.location.address + ' ' + shop.location.building_name + '</p>';
          if (shop.reservation_info.link_url) {
              infoWindowContent += '<a href="';
              infoWindowContent += shop.reservation_info.link_url;
              infoWindowContent += '" class="c-Btn_Secondly shop-Search_Infowindow-btn"><span>来店予約をする</span></a>';
          }

          markers[index] = new googleMaps.Marker({
              icon: regIcon,
              animation: googleMaps.Animation.DROP,
              position: position
          });
          markers[index].addListener('click', function() {
              markers.forEach(function(marker) {
                  marker.setIcon(regIcon);
              });
              this.setIcon(largeIcon);
              infoWindow.setContent(infoWindowContent);
              infoWindow.open(map, this);
          });
      });

      mc.clearMarkers();
      mc.addMarkers(markers);
  }

  function calcDistances(googleMaps, map, shopList) {
      let center = map.getCenter();
      let nearestLoc = {
          distance: 0
      };
      let bounds = new googleMaps.LatLngBounds();

      shopList.forEach(function(shop, index) {
          let position = new googleMaps.LatLng(shop.location.latitude, shop.location.longitude);
          let distance = Math.round(googleMaps.geometry.spherical.computeDistanceBetween(center, position));

          shop.distance = distance;

          if (index === 0) {
              nearestLoc = shop;
          }
          nearestLoc = nearestLoc.distance > shop.distance ? shop: nearestLoc;
      });

      if (nearestLoc.distance > 4000) {
          bounds.extend(center);
          bounds.extend(new googleMaps.LatLng(nearestLoc.location.latitude, nearestLoc.location.longitude));
          map.fitBounds(bounds);
      }
  }

  function setFilters(data) {
      let filters = [];
      let filterLabels = [];
      let filtervalue = document.querySelectorAll('[name="js-shop-Search_Map-filtervalue"]:checked');


      filtervalue.forEach(function(checked) {
          filters.push(parseInt(checked.value, 10));
          filterLabels.push(checked.getAttribute('data-filterlabel'));
      });

      if (mapSelectedFilters && filterLabels.length > 0) {
          mapSelectedFilters.textContent = '絞り込み条件：' + filterLabels.join(' / ');
      } else {
          mapSelectedFilters.textContent = '';
      }

      return data.filter(function(shop) {
          let services = shop.supported_features.services;
          return filters.every(function(filter) {
              return services.includes(filter);
          });
      });
  }

  function filterServices(arr) {
      arr.forEach(elem => {
          const str = 'service-' + elem;
          const node = document.getElementById(str);
          return node.setAttribute('aria-hidden', 'false');
      })
  }
  function hideFilterByService() {
      const node = document.getElementById('filter-by-service');
      node.setAttribute('aria-hidden', 'true');
  }

  function setPrefectures(data) {
      let options = ['<option value="">都道府県を選択</option>'];
      let flgment = '';
      let uniqueCities = filterUniqueCities(data)
          .map(function(item, index) {
              return {order: getPrefectureCode(item.location.prefecture), region: item.location.region, zipcd: item.location.zip_code.replace('-', '').replace('‐', ''), prefecture: item.location.prefecture, city: item.location.city};
          })
          .sort(function(a, b) {
              return parseInt((a.order + '' + a.zipcd), 10) - parseInt((b.order + '' + b.zipcd), 10);
          });
      uniqueCities.forEach(function(item) {
          flgment = '<option value="' + item.prefecture + '">' + item.prefecture + '</option>';
          if (options.indexOf(flgment) < 0) {
              options.push(flgment);
          }
      });
      selectPref.innerHTML = options.join();

      return uniqueCities;
  }

  function setCities(pref, cities) {
      let options = ['<option value="">市区町村を選択</option>'];
      let flgment = '';
      cities.forEach(function(item) {
          flgment = '<option value="' + item.city + '">' + item.city + '</option>';
          if (item.prefecture === pref && options.indexOf(flgment) < 0) {
              options.push(flgment);
          }
      });
      selectCity.innerHTML = options.join();
  }

  function filterUniqueCities (array) {
    let cities = array.map(function(item) {
      return item.location.prefecture + item.location.city;
    });
    return array.filter(function(item, index) {
      return cities.indexOf(item.location.prefecture + item.location.city) === index;
    });
  }

  function getPrefectureCode(name) {
      const list = ["北海道",
          "青森県","岩手県","宮城県","秋田県","山形県","福島県",
          "茨城県","栃木県","群馬県","埼玉県","千葉県","東京都","神奈川県",
          "新潟県","富山県","石川県","福井県","山梨県","長野県",
          "岐阜県","静岡県","愛知県","三重県",
          "滋賀県","京都府","大阪府","兵庫県","奈良県","和歌山県",
          "鳥取県","島根県","岡山県","広島県","山口県",
          "徳島県","香川県","愛媛県","高知県",
          "福岡県","佐賀県","長崎県","熊本県","大分県","宮崎県","鹿児島県","沖縄県"
      ];
      return list.indexOf(name) + 1;
  }

  function enableSearchByPrefCity() {
      if (searchByPrefCity) {
          let url = sitepath + 'shop/search/?prefecture=' + encodeURI(selectPref.value) + '&city=' + selectCity.value;
          if (selectPref.value) {
              searchByPrefCity.setAttribute('data-href', url);
              searchByPrefCity.setAttribute('aria-disabled', false);
              searchByPrefCity.removeAttribute('disabled');
          } else {
              searchByPrefCity.setAttribute('data-href', '');
              searchByPrefCity.setAttribute('aria-disabled', true);
              searchByPrefCity.setAttribute('disabled', true);
          }
      }
  }
</script>
<script src="<%= sitepath %>assets/js/library/markerclustererplus.min.js?200408"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBmiYC8QLzg9uN_RVQ2jkWNR5YRf1z7dfo&libraries=places,geometry&callback=initMap" async defer></script>
<%- include('/include/_append-body') %>
</body>
</html>
